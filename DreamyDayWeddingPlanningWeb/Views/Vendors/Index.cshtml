@model IEnumerable<DreamyDayWeddingPlanningWeb.Models.Vendor>

@{
    ViewData["Title"] = "Vendor Catalog - DreamyDay";
    Layout = "~/Views/Shared/_CoupleLayout.cshtml";
}

<section class="vendor-catalog">
    <h1 style="font-size: 24px; margin-bottom: 20px; color: #333;">Vendor Catalog</h1>

    @foreach (var category in Model.GroupBy(v => v.Category))
    {
        <div class="category mb-5">
            <h3 class="mb-3" style="font-size: 20px; color: #007bff;">@category.Key</h3>
            <div class="row">
                @foreach (var vendor in category)
                {
                    <div class="col-md-4 mb-3">
                        <div class="card h-100 shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title">@vendor.Name</h5>
                                <p class="card-text"><strong>Price:</strong> $@vendor.Price.ToString("F2")</p>
                                <p class="card-text"><strong>Description:</strong> @vendor.Description</p>
                                <p class="card-text"><strong>Reviews:</strong> @vendor.Reviews</p>
                                @if (vendor.IsBooked)
                                {
                                    <button class="btn btn-secondary btn-sm" disabled>Booked</button>
                                }
                                else
                                {
                                    <button class="btn btn-primary btn-sm book-vendor" data-vendor-id="@vendor.Id" data-vendor-name="@vendor.Name">Book Vendor</button>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</section>

<style>
    .vendor-catalog {
        background: linear-gradient(to bottom, #E2E8F0, #fff);
        padding: 20px;
        height: calc(100vh - 120px); /* Adjust for header and footer */
        overflow-y: auto; /* Enable vertical scrolling */
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .category {
        width: 100%;
        max-width: 1200px; /* Center and limit width for better readability */
    }

    .card {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    .card-title {
        color: #007bff;
        font-weight: 600;
        font-size: 1.25rem;
    }

    .card-text {
        color: #555;
        font-size: 0.95rem;
        margin-bottom: 0.5rem;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 8px 15px; /* Match theme button padding */
        color: #fff;
        border-radius: 5px;
        font-size: 0.9rem;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        padding: 8px 15px; /* Match theme button padding */
        color: #fff;
        border-radius: 5px;
        font-size: 0.9rem;
    }

    .row {
        margin-left: -10px;
        margin-right: -10px;
    }

    .col-md-4 {
        padding-left: 10px;
        padding-right: 10px;
    }

    .mb-3 {
        margin-bottom: 15px;
    }

    .mb-5 {
        margin-bottom: 30px;
    }
</style>

@section Scripts {
    <script>
        document.querySelectorAll('.book-vendor').forEach(button => {
            button.addEventListener('click', function () {
                const vendorId = this.getAttribute('data-vendor-id');
                const vendorName = this.getAttribute('data-vendor-name');

                fetch('@Url.Action("BookVendor", "Vendors")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ vendorId: parseInt(vendorId) })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(`Vendor "${vendorName}" booked successfully!`);
                            button.textContent = 'Booked';
                            button.classList.remove('btn-primary');
                            button.classList.add('btn-secondary');
                            button.disabled = true;
                        } else {
                            alert('Error: ' + data.message);
                        }
                    })
                    .catch(error => alert('Error: ' + error));
            });
        });
    </script>
}