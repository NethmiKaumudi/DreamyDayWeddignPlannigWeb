@model IEnumerable<DreamyDayWeddingPlanningWeb.Models.WeddingTask>

@{
    ViewData["Title"] = "Wedding Checklist";
    Layout = "~/Views/Shared/_CoupleLayout.cshtml";
}

<h1 style="font-size: 24px; margin-bottom: 20px;">Wedding TasksList</h1>

<div class="container-fluid">
    <div class="card">
        <h2 class="mb-3">Your Wedding Tasks</h2>
        <hr class="mb-3" />

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <p>
            <a asp-action="Create" asp-controller="WeddingTasks" class="btn btn-primary">Create New Task</a>
        </p>

        @if (!Model.Any())
        {
            <p class="text-muted">No tasks found. Start by creating a new task!</p>
        }
        else
        {
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th></th> <!-- Checkbox column -->
                        <th>@Html.DisplayNameFor(model => model.TaskName)</th>
                        <th>@Html.DisplayNameFor(model => model.Deadline)</th>
                        <th>@Html.DisplayNameFor(model => model.IsCompleted)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" id="task-@item.Id" @(item.IsCompleted ? "checked disabled" : "") onchange="completeTask('@item.Id', this)" />
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.TaskName)</td>
                            <td>@item.Deadline.ToString("MMM dd, yyyy")</td>
                            <td>
                                <span id="status-@item.Id" class="badge @(item.IsCompleted ? "bg-success" : "bg-warning")">
                                    @(item.IsCompleted ? "Completed" : "Pending")
                                </span>
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

<style>
    .container-fluid {
        max-width: 100%;
    }

    .card {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

        .card h2 {
            font-size: 20px;
            color: #333;
        }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 10px;
            text-align: left;
        }

    .table-dark {
        background-color: #343a40;
        color: #fff;
    }

    .badge {
        padding: 5px 10px;
        border-radius: 5px;
    }

    .bg-success {
        background-color: #28a745;
        color: #fff;
    }

    .bg-warning {
        background-color: #ffc107;
        color: #333;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 8px 15px;
        color: #fff;
        border-radius: 5px;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-outline-primary {
        border-color: #007bff;
        color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: #fff;
        }

    .btn-outline-info {
        border-color: #17a2b8;
        color: #17a2b8;
    }

        .btn-outline-info:hover {
            background-color: #17a2b8;
            color: #fff;
        }

    .btn-outline-danger {
        border-color: #dc3545;
        color: #dc3545;
    }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: #fff;
        }

    .alert {
        margin-bottom: 15px;
    }
</style>

@section Scripts {
    <script>
        function completeTask(taskId, checkbox) {
            // Disable the checkbox to prevent multiple clicks
            checkbox.disabled = true;

            // Send AJAX request to mark the task as completed
            fetch('/WeddingTasks/Complete/' + taskId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update the status badge
                    const statusBadge = document.getElementById('status-' + taskId);
                    statusBadge.classList.remove('bg-warning');
                    statusBadge.classList.add('bg-success');
                    statusBadge.textContent = 'Completed';
                } else {
                    alert('Error: ' + data.message);
                    checkbox.checked = false; // Revert the checkbox
                    checkbox.disabled = false; // Re-enable the checkbox
                }
            })
            .catch(error => {
                alert('Error: ' + error);
                checkbox.checked = false; // Revert the checkbox
                checkbox.disabled = false; // Re-enable the checkbox
            });
        }
    </script>
}